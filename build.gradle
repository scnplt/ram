/*
 * RAM (c) by Sertan Canpolat
 *
 * RAM is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.
 *
 * You should have received a copy of the license along with this work.
 * If not, see <http://creativecommons.org/licenses/by-nc/4.0/>.
 */

buildscript {
    dependencies {
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.5'
        classpath 'com.google.firebase:perf-plugin:1.4.2'
    }
}

plugins {
    id 'com.android.application' version '7.2.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
    id 'com.google.dagger.hilt.android' version '2.44' apply false
    id 'androidx.navigation.safeargs.kotlin' version '2.5.2' apply false
    id 'com.google.gms.google-services' version '4.3.13' apply false
    id 'io.gitlab.arturbosch.detekt' version '1.22.0-RC1' apply false
    id 'com.android.library' version '7.2.2' apply false
    id 'org.jlleitschuh.gradle.ktlint' version '11.0.0' apply false
}

allprojects {
    apply from: rootProject.file('dependencies.gradle')

    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'io.gitlab.arturbosch.detekt'

    ktlint {
        android = true
        debug = false
        verbose = false
        reporters {
            reporter "plain"
            reporter "html"
        }
    }

    tasks.withType(org.jlleitschuh.gradle.ktlint.tasks.GenerateReportsTask) {
        reportsOutputDirectory = rootProject.layout.buildDirectory.dir("reports/ktlint/${project.name}")
    }

    detekt {
        allRules = true
        debug = false
        parallel = true
    }

    tasks.named("detekt").configure {
        reports {
            html.required.set(true)
            html.outputLocation.set(file("$rootDir/build/reports/detekt/${project.name}/detekt.html"))

            txt.required.set(true)
            txt.outputLocation.set(file("$rootDir/build/reports/detekt/${project.name}/detekt.txt"))

            md.required.set(false)
            sarif.required.set(false)
            xml.required.set(false)
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
